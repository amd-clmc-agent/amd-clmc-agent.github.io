demo run with success.

log:

Computing BASELINE Forcing Term (w/o Obstacle) ...
Done
Building Feature Matrix from Demo Setting #1/7 ...
Building Feature Matrix from Demo Setting #2/7 ...
Building Feature Matrix from Demo Setting #3/7 ...
Building Feature Matrix from Demo Setting #4/7 ...
Building Feature Matrix from Demo Setting #5/7 ...
Building Feature Matrix from Demo Setting #6/7 ...
Building Feature Matrix from Demo Setting #7/7 ...
Done
Performing Moore-Penrose Inverse ...
Done
Logging Learning Obstacle Avoidance Data (w/o ILC)...
Done
Iterative Learning Control (ILC) iteration 1:
Building Feature Matrix ...
Done
Performing Moore-Penrose Inverse ...
Done
mse (Ct_actual-Ct_fit_old) = 88.8466 36.3545 137.917
weights->minCoeff() = -22.8273; weights->maxCoeff() = 21.9601
LC iteration 1, mse (Ct_target-Ct_fit_new) = 192.554 90.3247 153.802

Iterative Learning Control (ILC) iteration 2:
Building Feature Matrix ...
Done
Performing Moore-Penrose Inverse ...
Done
mse (Ct_actual-Ct_fit_old) = 0.258629 0.123562 0.401314
weights->minCoeff() = -20.0829; weights->maxCoeff() = 19.4971
LC iteration 2, mse (Ct_target-Ct_fit_new) = 187.746 85.7562 143.599

Iterative Learning Control (ILC) iteration 3:
Building Feature Matrix ...
Done
Performing Moore-Penrose Inverse ...
Done
mse (Ct_actual-Ct_fit_old) = 3.86306 2.90893 10.9815
weights->minCoeff() = -19.3979; weights->maxCoeff() = 17.6351
LC iteration 3, mse (Ct_target-Ct_fit_new) = 175.403 73.5657 122.132

Iterative Learning Control (ILC) iteration 4:
Building Feature Matrix ...
Done
Performing Moore-Penrose Inverse ...
Done
mse (Ct_actual-Ct_fit_old) = 1.71319 4.31208 17.3047
weights->minCoeff() = -18.6117; weights->maxCoeff() = 16.0692
LC iteration 4, mse (Ct_target-Ct_fit_new) =  168.38 66.6668 123.727

Iterative Learning Control (ILC) iteration 5:
Building Feature Matrix ...
Done
Performing Moore-Penrose Inverse ...
Done
mse (Ct_actual-Ct_fit_old) = 0.559701 0.137946  1.67346
weights->minCoeff() = -17.5443; weights->maxCoeff() = 14.4567
LC iteration 5, mse (Ct_target-Ct_fit_new) = 166.008 65.9266 129.352

Iterative Learning Control (ILC) iteration 6:
Building Feature Matrix ...
Done
Performing Moore-Penrose Inverse ...
Done
mse (Ct_actual-Ct_fit_old) =  0.257422 0.0432217  0.512217
weights->minCoeff() = -16.2951; weights->maxCoeff() = 12.9344
LC iteration 6, mse (Ct_target-Ct_fit_new) = 164.479 65.4136 130.774

Iterative Learning Control (ILC) iteration 7:
Building Feature Matrix ...
Done
Performing Moore-Penrose Inverse ...
Done
mse (Ct_actual-Ct_fit_old) =   0.21058 0.0326639  0.384225
weights->minCoeff() = -14.9696; weights->maxCoeff() = 11.5185
LC iteration 7, mse (Ct_target-Ct_fit_new) = 163.687 64.9828 131.698

Iterative Learning Control (ILC) iteration 8:
Building Feature Matrix ...
Done
Performing Moore-Penrose Inverse ...
Done
mse (Ct_actual-Ct_fit_old) =  0.15334 0.024801 0.296132
weights->minCoeff() = -13.6612; weights->maxCoeff() = 10.224
LC iteration 8, mse (Ct_target-Ct_fit_new) = 163.306 64.5764 132.308

Iterative Learning Control (ILC) iteration 9:
Building Feature Matrix ...
Done
Performing Moore-Penrose Inverse ...
Done
mse (Ct_actual-Ct_fit_old) =  0.110684 0.0192836  0.229386
weights->minCoeff() = -12.4368; weights->maxCoeff() = 9.30492
LC iteration 9, mse (Ct_target-Ct_fit_new) = 163.112 64.1956 132.615

Iterative Learning Control (ILC) iteration 10:
Building Feature Matrix ...
Done
Performing Moore-Penrose Inverse ...
Done
mse (Ct_actual-Ct_fit_old) = 0.0780606 0.0148663  0.176235
weights->minCoeff() = -11.3353; weights->maxCoeff() = 9.29957
LC iteration 10, mse (Ct_target-Ct_fit_new) = 162.995 63.8538 132.788

Iterative Learning Control (ILC) iteration 11:
Building Feature Matrix ...
Done
Performing Moore-Penrose Inverse ...
Done
mse (Ct_actual-Ct_fit_old) = 0.0526247 0.0108416  0.129341
weights->minCoeff() = -10.3726; weights->maxCoeff() = 9.29585
LC iteration 11, mse (Ct_target-Ct_fit_new) = 162.896 63.5551 132.989

Iterative Learning Control (ILC) iteration 12:
Building Feature Matrix ...
Done
Performing Moore-Penrose Inverse ...
Done
mse (Ct_actual-Ct_fit_old) =  0.0342326 0.00740923    0.09038
weights->minCoeff() = -9.61719; weights->maxCoeff() = 9.29451
LC iteration 12, mse (Ct_target-Ct_fit_new) = 162.786 63.2962 133.285

Iterative Learning Control (ILC) iteration 13:
Building Feature Matrix ...
Done
Performing Moore-Penrose Inverse ...
Done
mse (Ct_actual-Ct_fit_old) =  0.0224373 0.00499967  0.0636526
weights->minCoeff() = -9.75616; weights->maxCoeff() = 9.2958
LC iteration 13, mse (Ct_target-Ct_fit_new) = 162.662 63.0741 133.666

Iterative Learning Control (ILC) iteration 14:
Building Feature Matrix ...
Done
Performing Moore-Penrose Inverse ...
Done
mse (Ct_actual-Ct_fit_old) =  0.0154701 0.00356153  0.0480065
weights->minCoeff() = -9.87247; weights->maxCoeff() = 9.29918
LC iteration 14, mse (Ct_target-Ct_fit_new) = 162.533 62.8888 134.093

Iterative Learning Control (ILC) iteration 15:
Building Feature Matrix ...
Done
Performing Moore-Penrose Inverse ...
Done
mse (Ct_actual-Ct_fit_old) =  0.0113514 0.00271626  0.0388078
weights->minCoeff() = -9.97178; weights->maxCoeff() = 9.30368
LC iteration 15, mse (Ct_target-Ct_fit_new) = 162.413 62.7405 134.535

Iterative Learning Control (ILC) iteration 16:
Building Feature Matrix ...
Done
Performing Moore-Penrose Inverse ...
Done
mse (Ct_actual-Ct_fit_old) = 0.00876197 0.00216634  0.0326148
weights->minCoeff() = -10.0578; weights->maxCoeff() = 9.30841
LC iteration 16, mse (Ct_target-Ct_fit_new) = 162.311 62.6278 134.975

Iterative Learning Control (ILC) iteration 17:
Building Feature Matrix ...
Done
Performing Moore-Penrose Inverse ...
Done
mse (Ct_actual-Ct_fit_old) = 0.00701252 0.00177342   0.027927
weights->minCoeff() = -10.1332; weights->maxCoeff() = 9.31284
LC iteration 17, mse (Ct_target-Ct_fit_new) = 162.228 62.5467 135.409

Iterative Learning Control (ILC) iteration 18:
Building Feature Matrix ...
Done
Performing Moore-Penrose Inverse ...
Done
mse (Ct_actual-Ct_fit_old) = 0.00575691 0.00147832  0.0241629
weights->minCoeff() = -10.1997; weights->maxCoeff() = 9.3168
LC iteration 18, mse (Ct_target-Ct_fit_new) = 162.163 62.4921 135.833

Iterative Learning Control (ILC) iteration 19:
Building Feature Matrix ...
Done
Performing Moore-Penrose Inverse ...
Done
mse (Ct_actual-Ct_fit_old) = 0.00481121 0.00124951  0.0210372
weights->minCoeff() = -10.259; weights->maxCoeff() = 9.32036
LC iteration 19, mse (Ct_target-Ct_fit_new) = 162.112 62.4592 136.249

Iterative Learning Control (ILC) iteration 20:
Building Feature Matrix ...
Done
Performing Moore-Penrose Inverse ...
Done
mse (Ct_actual-Ct_fit_old) = 0.00407333 0.00106759  0.0183851
weights->minCoeff() = -10.3124; weights->maxCoeff() = 9.32374
LC iteration 20, mse (Ct_target-Ct_fit_new) = 162.074 62.4433 136.655

Iterative Learning Control (ILC) iteration 21:
Building Feature Matrix ...
Done
Performing Moore-Penrose Inverse ...
Done
mse (Ct_actual-Ct_fit_old) =  0.00348454 0.000920419   0.0161107
weights->minCoeff() = -10.3611; weights->maxCoeff() = 9.32715
LC iteration 21, mse (Ct_target-Ct_fit_new) = 162.044  62.441 137.051

Logging Learning Obstacle Avoidance Data (w/ ILC)...
Done
Learning Obstacle Avoidance Coupling Term is Done.
Evaluating LOA Performance on Demo Setting #1/7 ...
Ideal Case (using TRAINING trajectory to compute features) ...
Real Case (using TEST trajectory to compute features) ...
Evaluating LOA Performance on Demo Setting #2/7 ...
Ideal Case (using TRAINING trajectory to compute features) ...
Real Case (using TEST trajectory to compute features) ...
Evaluating LOA Performance on Demo Setting #3/7 ...
Ideal Case (using TRAINING trajectory to compute features) ...
Real Case (using TEST trajectory to compute features) ...
Evaluating LOA Performance on Demo Setting #4/7 ...
Ideal Case (using TRAINING trajectory to compute features) ...
Real Case (using TEST trajectory to compute features) ...
Evaluating LOA Performance on Demo Setting #5/7 ...
Ideal Case (using TRAINING trajectory to compute features) ...
Real Case (using TEST trajectory to compute features) ...
Evaluating LOA Performance on Demo Setting #6/7 ...
Ideal Case (using TRAINING trajectory to compute features) ...
Real Case (using TEST trajectory to compute features) ...
Evaluating LOA Performance on Demo Setting #7/7 ...
Ideal Case (using TRAINING trajectory to compute features) ...
Real Case (using TEST trajectory to compute features) ...
